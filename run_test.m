ccc;
addpath(genpath('./IRL-Toolkit/'));
% PREPARE NAMING LIST AND PARAMETERES FOR EACH ALGORITHM
algorithms = {'dmpl',...
    'gpirl',...
    'maxent',...
    'mwal',...
    'mmp',...
    'learch',...
    };
names = {'DMPL',...
    'GPIRL',...
    'MaxEnt',...
    'MWAL',...
    'MMP',...
    'LEARCH',...
    };

% THESE SETTINGS WORKS FOR OBJECT WORLD
algorithm_params = {...
    struct(),...
    struct('inducing_pts','all'),...
    struct('all_features',1,'laplace_prior',1),...
    struct('all_features',1),...
    struct('all_features',1),...
    struct('function','linear,dtree'),...
    };

% Prepare MDP parameters.
n = 32;
mdp_model = 'linearmdp';
world = 'objectworld';
mdp_param_names = {'4','8','16','32','64'};

restarts = 8; % THE NUMBER OF EXPERIMENTS
transfers = 0; % THE NUMBER OF TRANSFER TASKS (WE DONT USE THIS OPTION)

world_size_list = [16];
traj_len_list = [32];

colors = {...
    [0.0,0.0,0.0],...
    [0.0,0.0,0.5],...
    [1.0,0.5,0.5],...
    [0.9,0.1,0.1],...
    [0.6,0.0,0.0],...
    [0.0,1.0,0.0],...
    [0.7,0.5,0.1],...
    [0.0,0.5,0.0],...
    [0.2,0.9,0.9],...
    [0.6,0.9,0.4],...
    [0.5,0.6,0.2],...
    [0.4,0.6,0.9]};

% Create order.
order = 1:length(colors);

parpool(3);
% for world_size = world_size_list
for traj_len = traj_len_list
    mdp_cat_name = 'Examples';
    
    mdp_params = {struct('n',32,'determinism',0.7,'seed',0,'continuous',1)};
    mdp_params = repmat(mdp_params,1,length(mdp_param_names));
    %         mdp_params{1}.n = 4;
    %         mdp_params{2}.n = 8;
    %         mdp_params{3}.n = 16;
    %         mdp_params{4}.n = 32;
    %         mdp_params{5}.n = 64;
    % SET PERFORMANCE METIRCS
    [test_models,test_metrics,test_model_names,test_metric_names] = getmetrics();
    test_params = struct('training_sample_lengths',traj_len,'training_samples',32,...
        'test_models',{test_models},'test_metrics',{test_metrics},'verbosity',0);
    test_params = {setdefaulttestparams(test_params)};
    test_params = repmat(test_params,1,length(mdp_param_names));
    test_params{1}.training_samples = 4;
    test_params{2}.training_samples = 8;
    test_params{3}.training_samples = 16;
    test_params{4}.training_samples = 32;
    test_params{5}.training_samples = 64;
    
    %%
    % Run tests.
    series_result = runtestseries(algorithms,algorithm_params,...
        mdp_model,test_params,world,mdp_params,restarts);
    
    %%
    % Print.
    %         printstats(1,test_params,test_metric_names,test_model_names,...
    %             mdp_params,mdp_cat_name,mdp_param_names,algorithms,names,restarts,...
    %             series_result,[]);
    
    %%
    % Save.
    saveresults(sprintf('Objectworld_Examples_%02d',traj_len),test_params,test_metric_names,test_model_names,...
        mdp_params,mdp_cat_name,mdp_param_names,algorithms,names,colors,order,...
        restarts,series_result,[]);
    
end
% end
%%
delete(gcp('nocreate'));
